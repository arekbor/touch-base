version: "3.4"

services:
  touch-base-backend:
    container_name: touch_base_server
    restart: always
    build:
      context: ./Backend/Arekbor.TouchBase
    environment:
      - Serilog__MinimumLevel__Default=${SERILOG_MINIMUMLEVEL_DEFAULT}
      - Serilog__MinimumLevel__Override__Microsoft=${SERILOG_MINIMUMLEVEL_OVERRIDE_MICROSOFT}
      - Serilog__MinimumLevel__Override__System=${SERILOG_MINIMUMLEVEL_OVERRIDE_SYSTEM}
      - Persistence__Postgres=${DATABASE_CONN}
      - Jwt__Secret=${JWT_SECRET}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
      - Jwt__ExpiresInSeconds=${JWT_EXPIRES_IN_SECONDS}
      - RefreshToken__ExpiresInSeconds=${REFRESH_TOKEN_EXPIRES_IN_SECONDS}
      - AllowedHosts=${ALLOWED_HOSTS}
    depends_on:
      - postgres
    env_file:
      - .env

  touch-base-frontend:
    container_name: touch_base
    restart: always
    build:
      context: ./Frontend/touchbase
    ports:
      - 4200:80
    depends_on:
      - touch-base-backend

  postgres:
    container_name: touch_base_postgres
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - .env

volumes:
  db:
    driver: local
# - przekaz wszystkie environmenty z docker compose do appsettings.json
# - sprobuj przekazac hosta i port do nginxa w touch-base-frontend
# - odseparuj baze danych od reszty, mozna pingowac baze danych w kontenerze frontendowym
# - zabezpiecz bardziej konfiguracje nginxa w touch-base-frontend
# - zabezpiecz konfiguracje Dockerfilow, wylacz roota etc
# - uzupenij plik .dockerignore
